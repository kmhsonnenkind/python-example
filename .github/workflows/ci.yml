# MIT License
#
# Copyright (c) 2021 Martin Kloesch
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Continuous Integration

on:
  push:
  pull_request:
    branches: [main]

jobs:
  test:
    name: Python ${{ matrix.python-version }} ${{ matrix.runs-on }} (${{ matrix.architecture }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.6", "3.7", "3.8"]
        architecture: ["x64"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install -r requirements-ci.txt

      - name: Run tests and checks
        run: python -m tox
        env:
          PLATFORM: ${{ matrix.runs-on }}

      - name: Upload coverage results
        if: matrix.runs-on == 'ubuntu-latest' && matrix.python-version == '3.8'
        run: bash <(curl -s https://codecov.io/bash) -f coverage.xml


  build:
    name: Build
    needs: test
    if: success()
    runs-on: ubuntu-latest
    env:
      BASE_VERSION: 0.0.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install -r requirements-ci.txt

      - name: Calculate version (development)
        if: github.event_name != 'push' || github.ref != 'refs/heads/main'
        run: echo "VERSION=${{ env.BASE_VERSION }}-dev+$(date +%Y%m%d%H%M%S)">> $GITHUB_ENV

      - name: Calculate version (release)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "VERSION=${{ env.BASE_VERSION }}" >> $GITHUB_ENV

      - name: Patch version information
        run: ./.github/scripts/patch-version.sh ${{ env.VERSION }}

      - name: Build packages
        run: |
          python -m build --no-isolation
          python -m twine check dist/*

      - name: Build documentation
        run: python setup.py build_sphinx

      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: python-distributions
          path: dist/*

      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: build/sphinx/**

  deploy:
    name: Deploy
    needs: build
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download built packages
        uses: actions/download-artifact@v2
        with:
          name: python-distributions
          path: dist

      - name: Publish packages (TestPyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: True
